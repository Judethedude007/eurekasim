// Created by Microsoft (R) C/C++ Compiler Version 14.00.24215.1 (9f8e0b23).
//
// d:\eurekasim\sdk\pluginsamples\cpp\pendulum\pendulum\x64\debug\eurekasim.tlh
//
// C++ source equivalent of Win32 type library EurekaSim.tlb
// compiler-generated file created 06/24/25 at 10:08:49 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("38379857-2986-4cd5-b26f-c2fed468d342"))
/* LIBID */ __EurekaSim;
struct /* coclass */ Addin;
struct __declspec(uuid("1186bc6b-64a7-4415-bdf6-4b192bb27733"))
/* dual interface */ IAddin;
struct __declspec(uuid("9e6c4518-af98-4654-b294-709d0440698b"))
/* dual interface */ IMainApplication;
struct /* coclass */ MainApplication;
struct /* coclass */ MainApplicationEvents;
struct __declspec(uuid("42c2b21e-0555-439c-8905-222dd02234fb"))
/* dual interface */ IMainApplicationEvents;
struct /* coclass */ MainWindow;
struct __declspec(uuid("76af030a-35a8-405b-b649-ace818a007bc"))
/* dual interface */ IMainWindow;
struct /* coclass */ ApplicationDocument;
struct __declspec(uuid("e03bd2af-d443-4e17-ad85-c0d2004321c7"))
/* dual interface */ IApplicationDocument;
struct /* coclass */ ApplicationView;
struct __declspec(uuid("497cada6-3a37-4f5e-a41d-010221d7deb2"))
/* dual interface */ IApplicationView;
struct /* coclass */ ApplicationSettings;
struct __declspec(uuid("ab315f3b-305b-44d1-871b-65fad00b2038"))
/* dual interface */ IApplicationSettings;
struct /* coclass */ RibbonToolbar;
struct __declspec(uuid("0add5a11-7b77-4094-af8a-540b28c73d71"))
/* dual interface */ IRibbonToolbar;
struct /* coclass */ PropertyWindow;
struct __declspec(uuid("cc1583fe-2ab3-4d68-b050-502c588f3fe8"))
/* dual interface */ IPropertyWindow;
struct /* coclass */ ApplicationViewEvents;
struct __declspec(uuid("5e1d1e5e-fa59-41ef-b2f0-45007f703110"))
/* dual interface */ IApplicationViewEvents;
struct /* coclass */ RibbonToolbarEvents;
struct __declspec(uuid("86a64f82-5e60-4d4d-a3d8-3b512805f847"))
/* dual interface */ IRibbonToolbarEvents;
struct /* coclass */ PropertyWindowEvents;
struct __declspec(uuid("59950c9d-08fd-4c0d-b44c-e4c0f5c2e3ab"))
/* dual interface */ IPropertyWindowEvents;
struct /* coclass */ ApplicationDocumentEvents;
struct __declspec(uuid("902aeb11-0b73-4be9-9000-3fe482b340a6"))
/* dual interface */ IApplicationDocumentEvents;
struct /* coclass */ Experiment;
struct __declspec(uuid("c8eee054-055f-42d5-9c32-aae2f5db8ca3"))
/* dual interface */ IExperiment;
struct /* coclass */ ExperimentEvents;
struct __declspec(uuid("92f075d5-45de-40bf-954f-9bc097fc043b"))
/* dual interface */ IExperimentEvents;
struct /* coclass */ ApplicationChart;
struct __declspec(uuid("cdfe7248-527e-4890-b1b3-24e372679cbe"))
/* dual interface */ IApplicationChart;
struct /* coclass */ GraphCtl;
struct __declspec(uuid("1ba3e124-9276-487a-9cae-d9a2276e80f8"))
/* dual interface */ IGraphCtl;
struct /* coclass */ MainWindowEvents;
struct __declspec(uuid("99f323b8-bd88-4dce-aa10-4ba0061baf24"))
/* dual interface */ IMainWindowEvents;
struct /* coclass */ ExperimentTreeView;
struct __declspec(uuid("30038c10-4ba8-4ae5-820f-d22d9c947ecf"))
/* dual interface */ IExperimentTreeView;
struct /* coclass */ ExperimentTreeViewEvents;
struct __declspec(uuid("845dfb21-303b-4751-951e-6f0df8a013c1"))
/* dual interface */ IExperimentTreeViewEvents;
struct /* coclass */ FileSettingsTreeViewEvents;
struct __declspec(uuid("ee1f0283-ed2f-4d38-b2e4-fcceb1d460f0"))
/* dual interface */ IFileSettingsTreeViewEvents;
struct /* coclass */ FileSettingsTreeView;
struct __declspec(uuid("54abd01e-3a09-4ab9-a594-a652a697f2b1"))
/* dual interface */ IFileSettingsTreeView;
struct /* coclass */ GraphCtrl2d;
struct __declspec(uuid("0fffbabb-9f1a-43e8-a2ff-6cf97d6d272a"))
/* dual interface */ IGraphCtrl2d;
struct /* coclass */ OpenGLView;
struct __declspec(uuid("adb4e5e0-ca47-44bf-9744-3178ade86f6d"))
/* dual interface */ IOpenGLView;
struct /* coclass */ OpenGLViewEvents;
struct __declspec(uuid("800a76a8-a08c-47cf-a985-ea4dec364e2f"))
/* dual interface */ IOpenGLViewEvents;
struct /* coclass */ OpenGLUtilView;
struct __declspec(uuid("c648d646-603d-4f95-bb6d-a8b6fbd0471a"))
/* dual interface */ IOpenGLUtilView;
struct /* coclass */ OpenGLUtilViewEvents;
struct __declspec(uuid("0a6b74cb-f443-4416-a121-a16031745ebf"))
/* dual interface */ IOpenGLUtilViewEvents;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IMainApplication, __uuidof(IMainApplication));
_COM_SMARTPTR_TYPEDEF(IAddin, __uuidof(IAddin));
_COM_SMARTPTR_TYPEDEF(IMainApplicationEvents, __uuidof(IMainApplicationEvents));
_COM_SMARTPTR_TYPEDEF(IMainWindow, __uuidof(IMainWindow));
_COM_SMARTPTR_TYPEDEF(IApplicationDocument, __uuidof(IApplicationDocument));
_COM_SMARTPTR_TYPEDEF(IApplicationView, __uuidof(IApplicationView));
_COM_SMARTPTR_TYPEDEF(IApplicationSettings, __uuidof(IApplicationSettings));
_COM_SMARTPTR_TYPEDEF(IRibbonToolbar, __uuidof(IRibbonToolbar));
_COM_SMARTPTR_TYPEDEF(IPropertyWindow, __uuidof(IPropertyWindow));
_COM_SMARTPTR_TYPEDEF(IApplicationViewEvents, __uuidof(IApplicationViewEvents));
_COM_SMARTPTR_TYPEDEF(IRibbonToolbarEvents, __uuidof(IRibbonToolbarEvents));
_COM_SMARTPTR_TYPEDEF(IPropertyWindowEvents, __uuidof(IPropertyWindowEvents));
_COM_SMARTPTR_TYPEDEF(IApplicationDocumentEvents, __uuidof(IApplicationDocumentEvents));
_COM_SMARTPTR_TYPEDEF(IExperiment, __uuidof(IExperiment));
_COM_SMARTPTR_TYPEDEF(IExperimentEvents, __uuidof(IExperimentEvents));
_COM_SMARTPTR_TYPEDEF(IApplicationChart, __uuidof(IApplicationChart));
_COM_SMARTPTR_TYPEDEF(IGraphCtl, __uuidof(IGraphCtl));
_COM_SMARTPTR_TYPEDEF(IMainWindowEvents, __uuidof(IMainWindowEvents));
_COM_SMARTPTR_TYPEDEF(IExperimentTreeView, __uuidof(IExperimentTreeView));
_COM_SMARTPTR_TYPEDEF(IExperimentTreeViewEvents, __uuidof(IExperimentTreeViewEvents));
_COM_SMARTPTR_TYPEDEF(IFileSettingsTreeViewEvents, __uuidof(IFileSettingsTreeViewEvents));
_COM_SMARTPTR_TYPEDEF(IFileSettingsTreeView, __uuidof(IFileSettingsTreeView));
_COM_SMARTPTR_TYPEDEF(IGraphCtrl2d, __uuidof(IGraphCtrl2d));
_COM_SMARTPTR_TYPEDEF(IOpenGLView, __uuidof(IOpenGLView));
_COM_SMARTPTR_TYPEDEF(IOpenGLViewEvents, __uuidof(IOpenGLViewEvents));
_COM_SMARTPTR_TYPEDEF(IOpenGLUtilView, __uuidof(IOpenGLUtilView));
_COM_SMARTPTR_TYPEDEF(IOpenGLUtilViewEvents, __uuidof(IOpenGLUtilViewEvents));

//
// Type library items
//

struct __declspec(uuid("70afc313-a879-4012-812d-aa714aef8c6f"))
Addin;
    // [ default ] interface IAddin

struct __declspec(uuid("9e6c4518-af98-4654-b294-709d0440698b"))
IMainApplication : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetAddInInfo (
        long lSessionID,
        __int64 lInstanceHandle,
        BSTR strXMLMenuToolbarIDCmdInfo,
        __int64 lToobarRes,
        BSTR Reserved ) = 0;
      virtual HRESULT __stdcall SetGraphInfo (
        long SessionID,
        long NoOfCharts ) = 0;
};

struct __declspec(uuid("1186bc6b-64a7-4415-bdf6-4b192bb27733"))
IAddin : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Initialize (
        long lSessionID,
        struct IMainApplication * pApp,
        VARIANT bFirstTime ) = 0;
      virtual HRESULT __stdcall Uninitialize (
        long lSessionID ) = 0;
      virtual HRESULT __stdcall About ( ) = 0;
};

struct __declspec(uuid("36f4f7bf-6a25-47a4-a5db-5c84b82811a1"))
MainApplication;
    // [ default ] interface IMainApplication

struct __declspec(uuid("d729e31d-cc69-48bf-ac5a-a5860dfd667b"))
MainApplicationEvents;
    // [ default ] interface IMainApplicationEvents

struct __declspec(uuid("42c2b21e-0555-439c-8905-222dd02234fb"))
IMainApplicationEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnApplicationLaunched ( ) = 0;
      virtual HRESULT __stdcall OnApplicationClose ( ) = 0;
};

struct __declspec(uuid("005fd9da-a89c-4d58-9f17-f1caa02484f9"))
MainWindow;
    // [ default ] interface IMainWindow

struct __declspec(uuid("76af030a-35a8-405b-b649-ace818a007bc"))
IMainWindow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Window (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_ChildWindow (
        long WindowType,
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall ResetAllOutputStatusWindows ( ) = 0;
      virtual HRESULT __stdcall ResetOperationStatusWindow ( ) = 0;
      virtual HRESULT __stdcall AddOperationStatus (
        BSTR Status,
        long bPostMessage ) = 0;
      virtual HRESULT __stdcall ResetErrorStatusWindow ( ) = 0;
      virtual HRESULT __stdcall AddErrorStatus (
        BSTR Status,
        long bPostMessage ) = 0;
      virtual HRESULT __stdcall ResetResultStatusWindow ( ) = 0;
      virtual HRESULT __stdcall AddResultStatus (
        BSTR Status,
        long bPostMessage ) = 0;
      virtual HRESULT __stdcall ResetAllStatusWindows ( ) = 0;
      virtual HRESULT __stdcall SetStatusbarMessage (
        BSTR StatusMessage,
        long bPostMessage ) = 0;
      virtual HRESULT __stdcall Set2ndStatusbarMessage (
        BSTR Msg,
        long bPostMessage ) = 0;
};

struct __declspec(uuid("9025bdcc-4135-4453-99f8-6ff16c1822dc"))
ApplicationDocument;
    // [ default ] interface IApplicationDocument

struct __declspec(uuid("e03bd2af-d443-4e17-ad85-c0d2004321c7"))
IApplicationDocument : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetAddinSettingsAsString (
        BSTR PluginName,
        BSTR Key,
        BSTR Value ) = 0;
      virtual HRESULT __stdcall GetAddinSettingsAsString (
        BSTR PluginName,
        BSTR Key,
        BSTR * Value ) = 0;
      virtual HRESULT __stdcall OpenDocument (
        BSTR FilePath ) = 0;
      virtual HRESULT __stdcall CloseActiveDocument ( ) = 0;
      virtual HRESULT __stdcall LaunchNewDocument ( ) = 0;
      virtual HRESULT __stdcall get_LogToCSVFileStatus (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_LogToCSVFileStatus (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DisplayRealTimeGraphStatus (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DisplayRealTimeGraphStatus (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_RecordSimulationAsVideoStatus (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_RecordSimulationAsVideoStatus (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_DisplayExpParamStatus (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_DisplayExpParamStatus (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_VisualizationMode (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_VisualizationMode (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_VisualizationMode3D (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_VisualizationMode3D (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_EnableVisualizationMode (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableVisualizationMode (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ShowGraphInMainWindow (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowGraphInMainWindow (
        /*[in]*/ long pVal ) = 0;
};

struct __declspec(uuid("7f4547b3-fc11-4e6e-afda-ad77be3a65a8"))
ApplicationView;
    // [ default ] interface IApplicationView

struct __declspec(uuid("497cada6-3a37-4f5e-a41d-010221d7deb2"))
IApplicationView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall ResetScene ( ) = 0;
      virtual HRESULT __stdcall UpdateDisplay ( ) = 0;
      virtual HRESULT __stdcall InitailizeDisplayLists ( ) = 0;
      virtual HRESULT __stdcall StartStockDListDef ( ) = 0;
      virtual HRESULT __stdcall EndStockListDef ( ) = 0;
      virtual HRESULT __stdcall BeginDraw (
        long Mode ) = 0;
      virtual HRESULT __stdcall EndDraw ( ) = 0;
      virtual HRESULT __stdcall SetColorf (
        float red,
        float green,
        float blue ) = 0;
      virtual HRESULT __stdcall SetVertexf (
        float x,
        float y,
        float z ) = 0;
      virtual HRESULT __stdcall ClearStockDispLists ( ) = 0;
      virtual HRESULT __stdcall BeginGraphicsCommands ( ) = 0;
      virtual HRESULT __stdcall EndGraphicsCommands ( ) = 0;
      virtual HRESULT __stdcall StartNewDisplayList ( ) = 0;
      virtual HRESULT __stdcall EndNewDisplayList ( ) = 0;
      virtual HRESULT __stdcall TranslateObject (
        float x,
        float y,
        float z ) = 0;
      virtual HRESULT __stdcall RotateObject (
        float Angle,
        float x,
        float y,
        float z ) = 0;
      virtual HRESULT __stdcall DrawSphere (
        double Radius,
        long LogitudeSubdiv,
        long LatitudeSubdiv ) = 0;
      virtual HRESULT __stdcall DrawCylinder (
        double baseRadius,
        double topRadius,
        double height,
        long slices,
        long stacks ) = 0;
      virtual HRESULT __stdcall DrawDisk (
        double innerRadius,
        double outerRadius,
        long slices,
        long loops ) = 0;
      virtual HRESULT __stdcall DrawPartialDisk (
        double innerRadius,
        double outerRadius,
        long slices,
        long loops,
        double startAngle,
        double sweepAngle ) = 0;
      virtual HRESULT __stdcall UpdatePredefinedScene ( ) = 0;
      virtual HRESULT __stdcall SetLineWidth (
        float Width ) = 0;
      virtual HRESULT __stdcall Set2DVertexf (
        float x,
        float y ) = 0;
      virtual HRESULT __stdcall DrawRectangle (
        float x1,
        float y1,
        float x2,
        float y2,
        long bFill ) = 0;
      virtual HRESULT __stdcall Draw2DLine (
        float x1,
        float y1,
        float x2,
        float y2 ) = 0;
      virtual HRESULT __stdcall Draw3DLine (
        float x1,
        float y1,
        float z1,
        float x2,
        float y2,
        float z2 ) = 0;
      virtual HRESULT __stdcall DrawPolygon (
        float * xAxisArray,
        float * yAxisArray,
        long ArrayCount,
        long bFill ) = 0;
      virtual HRESULT __stdcall InitializeEnvironment (
        long bShowAxis ) = 0;
      virtual HRESULT __stdcall get_EnableOwnerDraw (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableOwnerDraw (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall Initialize ( ) = 0;
      virtual HRESULT __stdcall PushMatrix ( ) = 0;
      virtual HRESULT __stdcall PopMatrix ( ) = 0;
      virtual HRESULT __stdcall DrawPredefinedQuadrics ( ) = 0;
      virtual HRESULT __stdcall IssueRotation ( ) = 0;
      virtual HRESULT __stdcall DrawRotatedObject ( ) = 0;
      virtual HRESULT __stdcall SetViewPort (
        long x,
        long y,
        long Width,
        long height ) = 0;
      virtual HRESULT __stdcall PushAttrribute (
        unsigned long Mask ) = 0;
      virtual HRESULT __stdcall PopAttrribute ( ) = 0;
      virtual HRESULT __stdcall Enable (
        long Capability ) = 0;
      virtual HRESULT __stdcall Disable (
        long Capability ) = 0;
      virtual HRESULT __stdcall DrawStockDispLists ( ) = 0;
      virtual HRESULT __stdcall GetClientRectInfo (
        long * Left,
        long * Top,
        long * Right,
        long * Bottom ) = 0;
      virtual HRESULT __stdcall ClientRectWidth (
        long * Width ) = 0;
      virtual HRESULT __stdcall ClientRectHeight (
        long * height ) = 0;
      virtual HRESULT __stdcall SetBkgColor (
        float red,
        float green,
        float blue,
        float Alpha ) = 0;
      virtual HRESULT __stdcall SetDepth (
        float Depth ) = 0;
      virtual HRESULT __stdcall SetLightInfo (
        long Light,
        long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall SetFontInfo (
        BSTR FontName,
        long height,
        long bBold,
        long bItalic ) = 0;
      virtual HRESULT __stdcall RunScript (
        BSTR Script,
        BSTR * pResult ) = 0;
      virtual HRESULT __stdcall RunScriptEx (
        BSTR Script,
        long ScriptType,
        BSTR * pResult ) = 0;
      virtual HRESULT __stdcall LaunchManageScriptDialog ( ) = 0;
};

struct __declspec(uuid("8bcce11f-d19f-4483-8737-ee54e5696d7f"))
ApplicationSettings;
    // [ default ] interface IApplicationSettings

struct __declspec(uuid("ab315f3b-305b-44d1-871b-65fad00b2038"))
IApplicationSettings : IDispatch
{};

struct __declspec(uuid("9a19345b-2f40-4a04-b171-6eb1385637bb"))
RibbonToolbar;
    // [ default ] interface IRibbonToolbar

struct __declspec(uuid("0add5a11-7b77-4094-af8a-540b28c73d71"))
IRibbonToolbar : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SetAddinRibbonToolbarInfo (
        long lSessionID,
        BSTR TabName,
        BSTR PanelGroupName,
        long ControlType,
        BSTR ControlName,
        BSTR CtrlID,
        BSTR ControlFunction,
        BSTR Desc,
        BSTR ShortcutKey,
        long RibbonToolbarIndex ) = 0;
      virtual HRESULT __stdcall SetAddinRibbonMenuInfo (
        long lSessionID,
        BSTR InsertBeforeMainMenu,
        BSTR MenuName,
        BSTR CtrlID,
        BSTR FunctionName,
        BSTR Desc,
        BSTR ShortcutKey,
        long MenuToolbarIndex ) = 0;
      virtual HRESULT __stdcall SetAddinRibbonToolbarButtonInfo (
        long lSessionID,
        BSTR TabName,
        BSTR PanelGroupName,
        BSTR MenuName,
        BSTR ButtonName,
        BSTR CtrlID,
        BSTR FunctionName,
        BSTR Desc,
        BSTR ShortcutKey,
        long RibbonToolbarIndex ) = 0;
      virtual HRESULT __stdcall RecalculateLayout ( ) = 0;
      virtual HRESULT __stdcall get_Window (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall SetControlText (
        BSTR CrlID,
        BSTR CtrlText ) = 0;
      virtual HRESULT __stdcall ReLoadMainAppExperimentList ( ) = 0;
      virtual HRESULT __stdcall GetControlText (
        BSTR CtrlID,
        BSTR * pCtrlText ) = 0;
};

struct __declspec(uuid("c73bf8a4-e4dc-48e9-8a8a-68695d71c777"))
PropertyWindow;
    // [ default ] interface IPropertyWindow

struct __declspec(uuid("cc1583fe-2ab3-4d68-b050-502c588f3fe8"))
IPropertyWindow : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall RemoveAll ( ) = 0;
      virtual HRESULT __stdcall EnableHeaderCtrl (
        long bEnable ) = 0;
      virtual HRESULT __stdcall EnableDescriptionArea (
        long bEnable ) = 0;
      virtual HRESULT __stdcall SetVSDotNetLook (
        long bEnable ) = 0;
      virtual HRESULT __stdcall MarkModifiedProperties (
        long bMark,
        long bRedraw ) = 0;
      virtual HRESULT __stdcall EnableHeaderCtrlEx (
        long bEnable,
        BSTR LeftColumnName,
        BSTR RightColumnName ) = 0;
      virtual HRESULT __stdcall AddPropertyGroup (
        BSTR PropertyGroupName ) = 0;
      virtual HRESULT __stdcall AddPropertyItem (
        BSTR GroupName,
        BSTR ItemPropertyName,
        VARIANT pValue,
        BSTR Description,
        long EditMode ) = 0;
      virtual HRESULT __stdcall SetPropListFont ( ) = 0;
      virtual HRESULT __stdcall AdjustLayout ( ) = 0;
      virtual HRESULT __stdcall GetValue (
        BSTR GroupName,
        BSTR PropertyName,
        VARIANT * Value ) = 0;
      virtual HRESULT __stdcall AddPropertyItemAsString (
        BSTR GroupName,
        BSTR PropertyName,
        BSTR Value,
        BSTR Description ) = 0;
      virtual HRESULT __stdcall GetValueAsString (
        BSTR GroupName,
        BSTR PropertyName,
        BSTR * pValue ) = 0;
      virtual HRESULT __stdcall AddPropertyItemsAsString (
        BSTR GroupName,
        BSTR PropertyName,
        BSTR Values,
        BSTR DefValue,
        BSTR Desc,
        long EditMode ) = 0;
      virtual HRESULT __stdcall AddFilePathItem (
        BSTR GroupName,
        BSTR PropertyName,
        BSTR DefValue,
        long bIsFilePath,
        BSTR ExtensionFilter,
        BSTR DefExt,
        BSTR Description ) = 0;
      virtual HRESULT __stdcall AddColorPropertyItem (
        BSTR GroupName,
        BSTR PropertyName,
        unsigned __int64 DefaultValue,
        BSTR Description ) = 0;
      virtual HRESULT __stdcall AddHierarchyItem (
        BSTR GroupName,
        BSTR SubGroupItemNames,
        BSTR PropertyName,
        BSTR Description,
        long ItemType,
        VARIANT DefValue,
        VARIANT AddParam1,
        VARIANT AddParam2,
        VARIANT AddParam3,
        VARIANT AddParam4 ) = 0;
      virtual HRESULT __stdcall AddCustomPropertyItem (
        BSTR GroupName,
        VARIANT CustMFCPropWnd ) = 0;
      virtual HRESULT __stdcall get_Window (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
      virtual HRESULT __stdcall get_PropGrdWindow (
        /*[out,retval]*/ VARIANT * pVal ) = 0;
};

struct __declspec(uuid("75cce2a4-4996-4c5e-acf0-5779519c7a18"))
ApplicationViewEvents;
    // [ default ] interface IApplicationViewEvents

struct __declspec(uuid("5e1d1e5e-fa59-41ef-b2f0-45007f703110"))
IApplicationViewEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnDrawSimulation ( ) = 0;
      virtual HRESULT __stdcall OnInitializeSimulation (
        long b3DMode,
        long VisualizationMode,
        BSTR Experiment ) = 0;
      virtual HRESULT __stdcall OnDrawPredefinedScene (
        BSTR Experiment ) = 0;
      virtual HRESULT __stdcall OnOwnerDrawSimulation ( ) = 0;
      virtual HRESULT __stdcall OnOwnerDrawCreate ( ) = 0;
      virtual HRESULT __stdcall ViewWndProc (
        long MsgID,
        VARIANT wParam,
        VARIANT lParam ) = 0;
      virtual HRESULT __stdcall OnActivateView (
        long bActivate,
        BSTR CurrentViewFilePath,
        BSTR PreviousViewFilePath ) = 0;
};

struct __declspec(uuid("27609e1d-ab3e-4058-8574-e9cee5577708"))
RibbonToolbarEvents;
    // [ default ] interface IRibbonToolbarEvents

struct __declspec(uuid("86a64f82-5e60-4d4d-a3d8-3b512805f847"))
IRibbonToolbarEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnBeforeAddinControlsLoad ( ) = 0;
      virtual HRESULT __stdcall OnAfterAddinControlsLoad ( ) = 0;
      virtual HRESULT __stdcall GetControlStatus (
        BSTR CtrlID,
        long * pStatus ) = 0;
      virtual HRESULT __stdcall RibbonWndProc (
        long MsgID,
        VARIANT wParam,
        VARIANT lParam ) = 0;
};

struct __declspec(uuid("5adfa2f2-a0f4-4eed-92c3-6e91013a1f64"))
PropertyWindowEvents;
    // [ default ] interface IPropertyWindowEvents

struct __declspec(uuid("59950c9d-08fd-4c0d-b44c-e4c0f5c2e3ab"))
IPropertyWindowEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnPropertyChanged (
        BSTR GroupName,
        BSTR PropertyName,
        BSTR PropertyValue ) = 0;
};

struct __declspec(uuid("41e563df-22ca-4d51-b40a-ee3dcd62db6b"))
ApplicationDocumentEvents;
    // [ default ] interface IApplicationDocumentEvents

struct __declspec(uuid("902aeb11-0b73-4be9-9000-3fe482b340a6"))
IApplicationDocumentEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnNewDocument (
        BSTR DocumentName ) = 0;
      virtual HRESULT __stdcall OnDocumentOpened (
        BSTR DocumentPath ) = 0;
      virtual HRESULT __stdcall OnCloseDocument (
        BSTR DocumentPath ) = 0;
      virtual HRESULT __stdcall OnBeforeSaveDocument (
        BSTR DocumentPath ) = 0;
      virtual HRESULT __stdcall OnAfterSaveDocument (
        BSTR DocumentPath ) = 0;
};

struct __declspec(uuid("0f56f152-82cd-4b00-9a56-eae622e22554"))
Experiment;
    // [ default ] interface IExperiment

struct __declspec(uuid("c8eee054-055f-42d5-9c32-aae2f5db8ca3"))
IExperiment : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall AddExperiment (
        long SessionID,
        BSTR ExperimentName ) = 0;
      virtual HRESULT __stdcall WriteCSVLogFileHeaderInfo (
        BSTR HeaderInfo ) = 0;
      virtual HRESULT __stdcall WriteToCSVLogFile (
        BSTR Info ) = 0;
      virtual HRESULT __stdcall get_LogFilePath (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall OpenLogFile (
        BSTR FilePath ) = 0;
      virtual HRESULT __stdcall CloseLogFile ( ) = 0;
      virtual HRESULT __stdcall ClearLogFileContents ( ) = 0;
      virtual HRESULT __stdcall get_SimulationState (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall StartSimulation ( ) = 0;
      virtual HRESULT __stdcall StopSimulation ( ) = 0;
      virtual HRESULT __stdcall GetSelectedExperiment (
        BSTR * pExperimentName,
        long * pAddinSesssionID ) = 0;
};

struct __declspec(uuid("e9240855-9646-4564-971d-9958cb48cb5c"))
ExperimentEvents;
    // [ default ] interface IExperimentEvents

struct __declspec(uuid("92f075d5-45de-40bf-954f-9bc097fc043b"))
IExperimentEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnStartSimulation (
        BSTR ExperimentName ) = 0;
      virtual HRESULT __stdcall OnStopSimulation (
        BSTR ExperimentName ) = 0;
      virtual HRESULT __stdcall OnStatusChange (
        long StatusCode,
        BSTR StatusDesc,
        BSTR AdditionalParam ) = 0;
      virtual HRESULT __stdcall OnError (
        long ErrorCode,
        BSTR ErrorDesc,
        BSTR AdditionalParam ) = 0;
      virtual HRESULT __stdcall OnInitializeLogFileInfo (
        BSTR ExperimentName ) = 0;
      virtual HRESULT __stdcall OnInitializeSimulationGraph (
        BSTR ExperimentName ) = 0;
      virtual HRESULT __stdcall OnInitializeSimulationVideoRecording (
        BSTR ExperimentName ) = 0;
};

struct __declspec(uuid("9d8447a5-48ea-45d9-9946-f1153c1c4888"))
ApplicationChart;
    // [ default ] interface IApplicationChart

struct __declspec(uuid("cdfe7248-527e-4890-b1b3-24e372679cbe"))
IApplicationChart : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ChartWindowMode (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ChartWindowMode (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall DeleteAllCharts ( ) = 0;
      virtual HRESULT __stdcall Initialize2dChart (
        long NoOfCharts ) = 0;
      virtual HRESULT __stdcall Set2dGraphInfo (
        long GraphIndex,
        BSTR GraphTitle,
        BSTR GraphXAxisTitle,
        BSTR GraphYAxisTitle,
        long ShowGraph ) = 0;
      virtual HRESULT __stdcall ResizeChartWindow ( ) = 0;
      virtual HRESULT __stdcall Set2dChartData (
        long Index,
        VARIANT DataArray ) = 0;
      virtual HRESULT __stdcall Set2dAxisRange (
        long GraphIndex,
        long AxisType,
        double MinValue,
        double MaxValue ) = 0;
      virtual HRESULT __stdcall Initialize3dChart (
        long NoOfCharts ) = 0;
      virtual HRESULT __stdcall InitializeChart (
        long NoOfCharts,
        long * pChartTypeArray ) = 0;
      virtual HRESULT __stdcall get_GraphCtrl3dObj (
        long Index,
        /*[out,retval]*/ IDispatch * * pVal ) = 0;
      virtual HRESULT __stdcall get_GraphCtrl2dObj (
        long Index,
        /*[out,retval]*/ IDispatch * * pVal ) = 0;
};

struct __declspec(uuid("7d7e6bcd-0089-4db9-b4e4-8fe903732413"))
GraphCtl;
    // [ default ] interface IGraphCtl

struct __declspec(uuid("1ba3e124-9276-487a-9cae-d9a2276e80f8"))
IGraphCtl : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_CaptionColor (
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_CaptionColor (
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall SetRange (
        double xmin,
        double xmax,
        double ymin,
        double ymax,
        double zmin,
        double zmax ) = 0;
      virtual HRESULT __stdcall AutoRange ( ) = 0;
      virtual HRESULT __stdcall ShowPropertyPages ( ) = 0;
      virtual HRESULT __stdcall get_TrackMode (
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_TrackMode (
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_Projection (
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_Projection (
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_XLabel (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_XLabel (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_YLabel (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_YLabel (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ZLabel (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ZLabel (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_XGridNumber (
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_XGridNumber (
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_YGridNumber (
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_YGridNumber (
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_ZGridNumber (
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ZGridNumber (
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_XGridColor (
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_XGridColor (
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall get_YGridColor (
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_YGridColor (
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall get_ZGridColor (
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_ZGridColor (
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall AddElement ( ) = 0;
      virtual HRESULT __stdcall DeleteElement (
        short ElementID ) = 0;
      virtual HRESULT __stdcall ClearGraph ( ) = 0;
      virtual HRESULT __stdcall get_ElementLineColor (
        short ElementID,
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementLineColor (
        short ElementID,
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementPointColor (
        short ElementID,
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementPointColor (
        short ElementID,
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall get_ElementLineWidth (
        short ElementID,
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementLineWidth (
        short ElementID,
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_ElementPointSize (
        short ElementID,
        /*[out,retval]*/ float * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementPointSize (
        short ElementID,
        /*[in]*/ float pVal ) = 0;
      virtual HRESULT __stdcall get_ElementType (
        short ElementID,
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementType (
        short ElementID,
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall PlotXYZ (
        double x,
        double y,
        double z,
        short ElementID ) = 0;
      virtual HRESULT __stdcall get_ElementShow (
        short ElementID,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementShow (
        short ElementID,
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ElementSurfaceFill (
        short ElementID,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementSurfaceFill (
        short ElementID,
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ElementSurfaceFlat (
        short ElementID,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementSurfaceFlat (
        short ElementID,
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ElementLight (
        short ElementID,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementLight (
        short ElementID,
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_ElementLightingAmbient (
        short ElementID,
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementLightingAmbient (
        short ElementID,
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_ElementLightingDiffuse (
        short ElementID,
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementLightingDiffuse (
        short ElementID,
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_ElementLightingSpecular (
        short ElementID,
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementLightingSpecular (
        short ElementID,
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_ElementMaterialAmbient (
        short ElementID,
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementMaterialAmbient (
        short ElementID,
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_ElementMaterialDiffuse (
        short ElementID,
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementMaterialDiffuse (
        short ElementID,
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_ElementMaterialSpecular (
        short ElementID,
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementMaterialSpecular (
        short ElementID,
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_ElementMaterialShinines (
        short ElementID,
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementMaterialShinines (
        short ElementID,
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall get_ElementMaterialEmission (
        short ElementID,
        /*[out,retval]*/ short * pVal ) = 0;
      virtual HRESULT __stdcall put_ElementMaterialEmission (
        short ElementID,
        /*[in]*/ short pVal ) = 0;
      virtual HRESULT __stdcall SetLightCoordinates (
        short ElementID,
        float x,
        float y,
        float z ) = 0;
      virtual HRESULT __stdcall CopyToClipboard ( ) = 0;
      virtual HRESULT __stdcall get_Lighting (
        short ElementID,
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_Lighting (
        short ElementID,
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_GraphCtrlObj (
        /*[out,retval]*/ IDispatch * * pVal ) = 0;
      virtual HRESULT __stdcall OnPrint (
        VARIANT pDC,
        VARIANT pPrintInfo ) = 0;
      virtual HRESULT __stdcall Print (
        BSTR Title ) = 0;
};

struct __declspec(uuid("ff8f1bc0-4715-4eb8-adc7-f40154565e33"))
MainWindowEvents;
    // [ default ] interface IMainWindowEvents

struct __declspec(uuid("99f323b8-bd88-4dce-aa10-4ba0061baf24"))
IMainWindowEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall MianWndProc (
        long MsgID,
        VARIANT wParam,
        VARIANT lParam ) = 0;
};

struct __declspec(uuid("894be66a-5355-47a5-852c-822c1829ff34"))
ExperimentTreeView;
    // [ default ] interface IExperimentTreeView

struct __declspec(uuid("30038c10-4ba8-4ae5-820f-d22d9c947ecf"))
IExperimentTreeView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall DeleteAllExperiments (
        long SessionID ) = 0;
      virtual HRESULT __stdcall AddExperiment (
        long SessionID,
        BSTR ExperimentGroup,
        BSTR ExperimentName ) = 0;
      virtual HRESULT __stdcall DeleteExperiment (
        long SessionID,
        BSTR ExperimentGroup,
        BSTR ExperimentName ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall Show (
        long bShow ) = 0;
      virtual HRESULT __stdcall SetTreeGroupState (
        BSTR ExperimentGroup,
        long TreeState ) = 0;
      virtual HRESULT __stdcall DeleteExperimentGroup (
        long SessionID,
        BSTR GroupName ) = 0;
      virtual HRESULT __stdcall SetRootNodeName (
        BSTR RootNodeName,
        long bRedraw ) = 0;
      virtual HRESULT __stdcall SelectActiveExperiment (
        long SessionID,
        BSTR ExperimentGroup,
        BSTR ExperimentName ) = 0;
};

struct __declspec(uuid("a219a39d-2a0f-4658-a810-8aa440b19852"))
ExperimentTreeViewEvents;
    // [ default ] interface IExperimentTreeViewEvents

struct __declspec(uuid("845dfb21-303b-4751-951e-6f0df8a013c1"))
IExperimentTreeViewEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnTreeNodeSelect (
        long SessionID,
        BSTR RootText,
        BSTR ExperimentGroup,
        BSTR ExperimentName ) = 0;
      virtual HRESULT __stdcall OnTreeNodeDblClick (
        long SessionID,
        BSTR RootText,
        BSTR ExperimentGroup,
        BSTR ExperimentName ) = 0;
      virtual HRESULT __stdcall OnReloadExperiment (
        long SessionID,
        BSTR RootText,
        BSTR ExperimentGroup,
        BSTR ExperimentName ) = 0;
};

struct __declspec(uuid("25a65e7e-e249-425f-90bd-4bd61c727883"))
FileSettingsTreeViewEvents;
    // [ default ] interface IFileSettingsTreeViewEvents

struct __declspec(uuid("ee1f0283-ed2f-4d38-b2e4-fcceb1d460f0"))
IFileSettingsTreeViewEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnActivateSnapshot (
        BSTR FilePath,
        BSTR GroupName,
        BSTR SnapshotName ) = 0;
      virtual HRESULT __stdcall OnAddSnapshot (
        BSTR FilePath,
        BSTR GroupName,
        BSTR SnapshotName ) = 0;
      virtual HRESULT __stdcall OnDeleteSnapshot (
        BSTR FilePath,
        BSTR GroupName,
        BSTR SnapshotName ) = 0;
      virtual HRESULT __stdcall OnDeleteAllSnapshot (
        BSTR FilePath ) = 0;
};

struct __declspec(uuid("1d8edc8a-f049-4ba0-8bc5-955a82bfc601"))
FileSettingsTreeView;
    // [ default ] interface IFileSettingsTreeView

struct __declspec(uuid("54abd01e-3a09-4ab9-a594-a652a697f2b1"))
IFileSettingsTreeView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall DeleteAllSnapshots (
        BSTR FilePath ) = 0;
      virtual HRESULT __stdcall AddSnapshot (
        BSTR FilePath,
        BSTR GroupName,
        BSTR SnapshotName ) = 0;
      virtual HRESULT __stdcall DeleteSnapshot (
        BSTR FilePath,
        BSTR GroupName,
        BSTR SnapshotName ) = 0;
      virtual HRESULT __stdcall ReloadAllSnapshots (
        BSTR FilePath ) = 0;
      virtual HRESULT __stdcall Show (
        long bShow ) = 0;
      virtual HRESULT __stdcall SetTreeGroupState (
        BSTR GroupName,
        long TreeState ) = 0;
      virtual HRESULT __stdcall SetRootNodeName (
        BSTR RootNodeName,
        long bRedraw ) = 0;
};

struct __declspec(uuid("40c1d140-3b42-46ef-848d-b1ba009692ef"))
GraphCtrl2d;
    // [ default ] interface IGraphCtrl2d

struct __declspec(uuid("0fffbabb-9f1a-43e8-a2ff-6cf97d6d272a"))
IGraphCtrl2d : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall Set2dGraphInfo (
        BSTR GraphTitle,
        BSTR XAxisGraphTitle,
        BSTR YAxisGraphTitle,
        long bShow ) = 0;
      virtual HRESULT __stdcall Set2dChartData (
        VARIANT GraphData ) = 0;
      virtual HRESULT __stdcall Set2dAxisRange (
        long AxisType,
        double MinValue,
        double MaxValue ) = 0;
      virtual HRESULT __stdcall DeleteAllCharts ( ) = 0;
      virtual HRESULT __stdcall Refresh ( ) = 0;
      virtual HRESULT __stdcall get_BkgColor (
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_BkgColor (
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall get_BorderColor (
        /*[out,retval]*/ OLE_COLOR * pVal ) = 0;
      virtual HRESULT __stdcall put_BorderColor (
        /*[in]*/ OLE_COLOR pVal ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_GraphCtrlObj (
        /*[out,retval]*/ IDispatch * * pVal ) = 0;
      virtual HRESULT __stdcall SaveAsImage (
        BSTR FilePath,
        long nBPP,
        long Width,
        long height,
        long FileType ) = 0;
      virtual HRESULT __stdcall get_EnablePan (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_EnablePan (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall get_EnableZoom (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableZoom (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall UndoPanZoom ( ) = 0;
      virtual HRESULT __stdcall get_ChartCount (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall CreateStandardAxis (
        long AxisType ) = 0;
      virtual HRESULT __stdcall get_EnableReferesh (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_EnableReferesh (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall CreateLineChart (
        long * pChartID ) = 0;
      virtual HRESULT __stdcall ClearChart (
        long ChartID ) = 0;
      virtual HRESULT __stdcall CreateSurfaceChart (
        long * pChartID ) = 0;
      virtual HRESULT __stdcall CreatePointsChart (
        long * pChartID ) = 0;
      virtual HRESULT __stdcall CreateBarChart (
        long * pChartID ) = 0;
      virtual HRESULT __stdcall CreateCandlestickChart (
        long * pChartID ) = 0;
      virtual HRESULT __stdcall CreateGanttChart (
        long * pChartID ) = 0;
      virtual HRESULT __stdcall SetAxisTitle (
        long AxisType,
        BSTR Title ) = 0;
      virtual HRESULT __stdcall get_ShowMainTitle (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_ShowMainTitle (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall SetChartData (
        long ChartID,
        VARIANT ChartData ) = 0;
      virtual HRESULT __stdcall AddChartPoint (
        long ChartID,
        double x,
        double y,
        double Value ) = 0;
      virtual HRESULT __stdcall get_TitleVisible (
        /*[out,retval]*/ long * pVal ) = 0;
      virtual HRESULT __stdcall put_TitleVisible (
        /*[in]*/ long pVal ) = 0;
      virtual HRESULT __stdcall OnPrint (
        VARIANT pDC,
        VARIANT pPrintInfo ) = 0;
      virtual HRESULT __stdcall Print (
        BSTR Title ) = 0;
};

struct __declspec(uuid("0234ea06-bacd-4930-8f94-11034fe5fcc1"))
OpenGLView;
    // [ default ] interface IOpenGLView

struct __declspec(uuid("adb4e5e0-ca47-44bf-9744-3178ade86f6d"))
IOpenGLView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall glAccum (
        unsigned long op,
        float Value ) = 0;
      virtual HRESULT __stdcall glAlphaFunc (
        unsigned long func,
        float ref ) = 0;
      virtual HRESULT __stdcall glAreTexturesResident (
        long n,
        unsigned long * textures,
        unsigned char * residences,
        unsigned char * bResult ) = 0;
      virtual HRESULT __stdcall glArrayElement (
        long i ) = 0;
      virtual HRESULT __stdcall glBegin (
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glBindTexture (
        unsigned long target,
        unsigned long texture ) = 0;
      virtual HRESULT __stdcall glBitmap (
        long Width,
        long height,
        float xorig,
        float yorig,
        float xmove,
        float ymove,
        unsigned char * bitmap ) = 0;
      virtual HRESULT __stdcall glBlendFunc (
        unsigned long sfactor,
        unsigned long dfactor ) = 0;
      virtual HRESULT __stdcall glCallList (
        unsigned long list ) = 0;
      virtual HRESULT __stdcall glCallLists (
        long n,
        unsigned long type,
        VARIANT lists ) = 0;
      virtual HRESULT __stdcall glClear (
        unsigned long Mask ) = 0;
      virtual HRESULT __stdcall glClearAccum (
        float red,
        float green,
        float blue,
        float Alpha ) = 0;
      virtual HRESULT __stdcall glClearColor (
        float red,
        float green,
        float blue,
        float Alpha ) = 0;
      virtual HRESULT __stdcall glClearDepth (
        double Depth ) = 0;
      virtual HRESULT __stdcall glClearIndex (
        float c ) = 0;
      virtual HRESULT __stdcall glClearStencil (
        long s ) = 0;
      virtual HRESULT __stdcall glClipPlane (
        unsigned long plane,
        double * equation ) = 0;
      virtual HRESULT __stdcall glColor3b (
        char red,
        char green,
        char blue ) = 0;
      virtual HRESULT __stdcall glColor3bv (
        char * v ) = 0;
      virtual HRESULT __stdcall glColor3d (
        double red,
        double green,
        double blue ) = 0;
      virtual HRESULT __stdcall glColor3dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glColor3f (
        float red,
        float green,
        float blue ) = 0;
      virtual HRESULT __stdcall glColor3fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glColor3i (
        long red,
        long green,
        long blue ) = 0;
      virtual HRESULT __stdcall glColor3iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glColor3s (
        short red,
        short green,
        short blue ) = 0;
      virtual HRESULT __stdcall glColor3sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glColor3ub (
        unsigned char red,
        unsigned char green,
        unsigned char blue ) = 0;
      virtual HRESULT __stdcall glColor3ubv (
        unsigned char * v ) = 0;
      virtual HRESULT __stdcall glColor3ui (
        unsigned long red,
        unsigned long green,
        unsigned long blue ) = 0;
      virtual HRESULT __stdcall glColor3uiv (
        unsigned long * v ) = 0;
      virtual HRESULT __stdcall glColor3us (
        unsigned short red,
        unsigned short green,
        unsigned short blue ) = 0;
      virtual HRESULT __stdcall glColor3usv (
        unsigned short * v ) = 0;
      virtual HRESULT __stdcall glColor4b (
        char red,
        char green,
        char blue,
        char Alpha ) = 0;
      virtual HRESULT __stdcall glColor4bv (
        char * v ) = 0;
      virtual HRESULT __stdcall glColor4d (
        double red,
        double green,
        double blue,
        double Alpha ) = 0;
      virtual HRESULT __stdcall glColor4dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glColor4f (
        float red,
        float green,
        float blue,
        float Alpha ) = 0;
      virtual HRESULT __stdcall glColor4fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glColor4i (
        long red,
        long green,
        long blue,
        long Alpha ) = 0;
      virtual HRESULT __stdcall glColor4iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glColor4s (
        short red,
        short green,
        short blue,
        short Alpha ) = 0;
      virtual HRESULT __stdcall glColor4sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glColor4ub (
        unsigned char red,
        unsigned char green,
        unsigned char blue,
        unsigned char Alpha ) = 0;
      virtual HRESULT __stdcall glColor4ubv (
        unsigned char * v ) = 0;
      virtual HRESULT __stdcall glColor4ui (
        unsigned long red,
        unsigned long green,
        unsigned long blue,
        unsigned long Alpha ) = 0;
      virtual HRESULT __stdcall glColor4uiv (
        unsigned long * v ) = 0;
      virtual HRESULT __stdcall glColor4us (
        unsigned short red,
        unsigned short green,
        unsigned short blue,
        unsigned short Alpha ) = 0;
      virtual HRESULT __stdcall glColor4usv (
        unsigned short * v ) = 0;
      virtual HRESULT __stdcall glColorMask (
        unsigned char red,
        unsigned char green,
        unsigned char blue,
        unsigned char Alpha ) = 0;
      virtual HRESULT __stdcall glColorMaterial (
        unsigned long face,
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glColorPointer (
        long size,
        unsigned long type,
        long stride,
        VARIANT pointer ) = 0;
      virtual HRESULT __stdcall glCopyPixels (
        long x,
        long y,
        long Width,
        long height,
        unsigned long type ) = 0;
      virtual HRESULT __stdcall glCopyTexImage1D (
        unsigned long target,
        long level,
        unsigned long internalFormat,
        long x,
        long y,
        long Width,
        long border ) = 0;
      virtual HRESULT __stdcall glCopyTexImage2D (
        unsigned long target,
        long level,
        unsigned long internalFormat,
        long x,
        long y,
        long Width,
        long height,
        long border ) = 0;
      virtual HRESULT __stdcall glCopyTexSubImage1D (
        unsigned long target,
        long level,
        long xoffset,
        long x,
        long y,
        long Width ) = 0;
      virtual HRESULT __stdcall glCopyTexSubImage2D (
        unsigned long target,
        long level,
        long xoffset,
        long yoffset,
        long x,
        long y,
        long Width,
        long height ) = 0;
      virtual HRESULT __stdcall glCullFace (
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glDeleteLists (
        unsigned long list,
        long range ) = 0;
      virtual HRESULT __stdcall glDeleteTextures (
        long n,
        unsigned long * textures ) = 0;
      virtual HRESULT __stdcall glDepthFunc (
        unsigned long func ) = 0;
      virtual HRESULT __stdcall glDepthMask (
        unsigned char flag ) = 0;
      virtual HRESULT __stdcall glDepthRange (
        double zNear,
        double zFar ) = 0;
      virtual HRESULT __stdcall glDisable (
        unsigned long cap ) = 0;
      virtual HRESULT __stdcall glDisableClientState (
        unsigned long array ) = 0;
      virtual HRESULT __stdcall glDrawArrays (
        unsigned long Mode,
        long first,
        long count ) = 0;
      virtual HRESULT __stdcall glDrawBuffer (
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glDrawElements (
        unsigned long Mode,
        long count,
        unsigned long type,
        VARIANT indices ) = 0;
      virtual HRESULT __stdcall glDrawPixels (
        long Width,
        long height,
        unsigned long format,
        unsigned long type,
        VARIANT pixels ) = 0;
      virtual HRESULT __stdcall glEdgeFlag (
        unsigned char flag ) = 0;
      virtual HRESULT __stdcall glEdgeFlagPointer (
        long stride,
        VARIANT pointer ) = 0;
      virtual HRESULT __stdcall glEdgeFlagv (
        unsigned char * flag ) = 0;
      virtual HRESULT __stdcall glEnable (
        unsigned long cap ) = 0;
      virtual HRESULT __stdcall glEnableClientState (
        unsigned long array ) = 0;
      virtual HRESULT __stdcall glEnd ( ) = 0;
      virtual HRESULT __stdcall glEndList ( ) = 0;
      virtual HRESULT __stdcall glEvalCoord1d (
        double u ) = 0;
      virtual HRESULT __stdcall glEvalCoord1dv (
        double * u ) = 0;
      virtual HRESULT __stdcall glEvalCoord1f (
        float u ) = 0;
      virtual HRESULT __stdcall glEvalCoord1fv (
        float * u ) = 0;
      virtual HRESULT __stdcall glEvalCoord2d (
        double u,
        double v ) = 0;
      virtual HRESULT __stdcall glEvalCoord2dv (
        double * u ) = 0;
      virtual HRESULT __stdcall glEvalCoord2f (
        float u,
        float v ) = 0;
      virtual HRESULT __stdcall glEvalCoord2fv (
        float * u ) = 0;
      virtual HRESULT __stdcall glEvalMesh1 (
        unsigned long Mode,
        long i1,
        long i2 ) = 0;
      virtual HRESULT __stdcall glEvalMesh2 (
        unsigned long Mode,
        long i1,
        long i2,
        long j1,
        long j2 ) = 0;
      virtual HRESULT __stdcall glEvalPoint1 (
        long i ) = 0;
      virtual HRESULT __stdcall glEvalPoint2 (
        long i,
        long j ) = 0;
      virtual HRESULT __stdcall glFeedbackBuffer (
        long size,
        unsigned long type,
        float * buffer ) = 0;
      virtual HRESULT __stdcall glFinish ( ) = 0;
      virtual HRESULT __stdcall glFlush ( ) = 0;
      virtual HRESULT __stdcall glFogf (
        unsigned long PName,
        float param ) = 0;
      virtual HRESULT __stdcall glFogfv (
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glFogi (
        unsigned long PName,
        long param ) = 0;
      virtual HRESULT __stdcall glFogiv (
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glFrontFace (
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glFrustum (
        double Left,
        double Right,
        double Bottom,
        double Top,
        double zNear,
        double zFar ) = 0;
      virtual HRESULT __stdcall glGenLists (
        long range,
        unsigned long * pResult ) = 0;
      virtual HRESULT __stdcall glGenTextures (
        long n,
        unsigned long * textures ) = 0;
      virtual HRESULT __stdcall glGetBooleanv (
        unsigned long PName,
        unsigned char * Params ) = 0;
      virtual HRESULT __stdcall glGetClipPlane (
        unsigned long plane,
        double * equation ) = 0;
      virtual HRESULT __stdcall glGetDoublev (
        unsigned long PName,
        double * Params ) = 0;
      virtual HRESULT __stdcall glGetError (
        unsigned long * pResult ) = 0;
      virtual HRESULT __stdcall glGetFloatv (
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glGetIntegerv (
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glGetLightfv (
        unsigned long Light,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glGetLightiv (
        unsigned long Light,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glGetMapdv (
        unsigned long target,
        unsigned long query,
        double * v ) = 0;
      virtual HRESULT __stdcall glGetMapfv (
        unsigned long target,
        unsigned long query,
        float * v ) = 0;
      virtual HRESULT __stdcall glGetMapiv (
        unsigned long target,
        unsigned long query,
        long * v ) = 0;
      virtual HRESULT __stdcall glGetMaterialfv (
        unsigned long face,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glGetMaterialiv (
        unsigned long face,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glGetPixelMapfv (
        unsigned long map,
        float * Values ) = 0;
      virtual HRESULT __stdcall glGetPixelMapuiv (
        unsigned long map,
        unsigned long * Values ) = 0;
      virtual HRESULT __stdcall glGetPixelMapusv (
        unsigned long map,
        unsigned short * Values ) = 0;
      virtual HRESULT __stdcall glGetPointerv (
        unsigned long PName,
        VARIANT * Params ) = 0;
      virtual HRESULT __stdcall glGetPolygonStipple (
        unsigned char * Mask ) = 0;
      virtual HRESULT __stdcall glGetString (
        unsigned long name,
        unsigned char * pResult ) = 0;
      virtual HRESULT __stdcall glGetTexEnvfv (
        unsigned long target,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glGetTexEnviv (
        unsigned long target,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glGetTexGendv (
        unsigned long coord,
        unsigned long PName,
        double * Params ) = 0;
      virtual HRESULT __stdcall glGetTexGenfv (
        unsigned long coord,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glGetTexGeniv (
        unsigned long coord,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glGetTexImage (
        unsigned long target,
        long level,
        unsigned long format,
        unsigned long type,
        VARIANT pixels ) = 0;
      virtual HRESULT __stdcall glGetTexLevelParameterfv (
        unsigned long target,
        long level,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glGetTexLevelParameteriv (
        unsigned long target,
        long level,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glGetTexParameterfv (
        unsigned long target,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glGetTexParameteriv (
        unsigned long target,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glHint (
        unsigned long target,
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glIndexMask (
        unsigned long Mask ) = 0;
      virtual HRESULT __stdcall glIndexPointer (
        unsigned long type,
        long stride,
        VARIANT pointer ) = 0;
      virtual HRESULT __stdcall glIndexd (
        double c ) = 0;
      virtual HRESULT __stdcall glIndexdv (
        double * c ) = 0;
      virtual HRESULT __stdcall glIndexf (
        float c ) = 0;
      virtual HRESULT __stdcall glIndexfv (
        float * c ) = 0;
      virtual HRESULT __stdcall glIndexi (
        long c ) = 0;
      virtual HRESULT __stdcall glIndexiv (
        long * c ) = 0;
      virtual HRESULT __stdcall glIndexs (
        short c ) = 0;
      virtual HRESULT __stdcall glIndexsv (
        short * c ) = 0;
      virtual HRESULT __stdcall glIndexub (
        unsigned char c ) = 0;
      virtual HRESULT __stdcall glIndexubv (
        unsigned char * c ) = 0;
      virtual HRESULT __stdcall glInitNames ( ) = 0;
      virtual HRESULT __stdcall glInterleavedArrays (
        unsigned long format,
        long stride,
        VARIANT pointer ) = 0;
      virtual HRESULT __stdcall glIsEnabled (
        unsigned long cap,
        unsigned char * pResult ) = 0;
      virtual HRESULT __stdcall glIsList (
        unsigned long list,
        unsigned char * pResult ) = 0;
      virtual HRESULT __stdcall glIsTexture (
        unsigned long texture,
        unsigned char * pResult ) = 0;
      virtual HRESULT __stdcall glLightModelf (
        unsigned long PName,
        float param ) = 0;
      virtual HRESULT __stdcall glLightModelfv (
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glLightModeli (
        unsigned long PName,
        long param ) = 0;
      virtual HRESULT __stdcall glLightModeliv (
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glLightf (
        unsigned long Light,
        unsigned long PName,
        float param ) = 0;
      virtual HRESULT __stdcall glLightfv (
        unsigned long Light,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glLighti (
        unsigned long Light,
        unsigned long PName,
        long param ) = 0;
      virtual HRESULT __stdcall glLightiv (
        unsigned long Light,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glLineStipple (
        long factor,
        unsigned short pattern ) = 0;
      virtual HRESULT __stdcall glLineWidth (
        float Width ) = 0;
      virtual HRESULT __stdcall glListBase (
        unsigned long base ) = 0;
      virtual HRESULT __stdcall glLoadIdentity ( ) = 0;
      virtual HRESULT __stdcall glLoadMatrixd (
        double * m ) = 0;
      virtual HRESULT __stdcall glLoadMatrixf (
        float * m ) = 0;
      virtual HRESULT __stdcall glLoadName (
        unsigned long name ) = 0;
      virtual HRESULT __stdcall glLogicOp (
        unsigned long opcode ) = 0;
      virtual HRESULT __stdcall glMap1d (
        unsigned long target,
        double u1,
        double u2,
        long stride,
        long order,
        double * points ) = 0;
      virtual HRESULT __stdcall glMap1f (
        unsigned long target,
        float u1,
        float u2,
        long stride,
        long order,
        float * points ) = 0;
      virtual HRESULT __stdcall glMap2f (
        unsigned long target,
        float u1,
        float u2,
        long ustride,
        long uorder,
        float v1,
        float v2,
        long vstride,
        long vorder,
        float * points ) = 0;
      virtual HRESULT __stdcall glMapGrid1d (
        long un,
        double u1,
        double u2 ) = 0;
      virtual HRESULT __stdcall glMapGrid1f (
        long un,
        float u1,
        float u2 ) = 0;
      virtual HRESULT __stdcall glMapGrid2d (
        long un,
        double u1,
        double u2,
        long vn,
        double v1,
        double v2 ) = 0;
      virtual HRESULT __stdcall glMapGrid2f (
        long un,
        float u1,
        float u2,
        long vn,
        float v1,
        float v2 ) = 0;
      virtual HRESULT __stdcall glMaterialf (
        unsigned long face,
        unsigned long PName,
        float param ) = 0;
      virtual HRESULT __stdcall glMaterialfv (
        unsigned long face,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glMateriali (
        unsigned long face,
        unsigned long PName,
        long param ) = 0;
      virtual HRESULT __stdcall glMaterialiv (
        unsigned long face,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glMatrixMode (
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glMultMatrixd (
        double * m ) = 0;
      virtual HRESULT __stdcall glMultMatrixf (
        float * m ) = 0;
      virtual HRESULT __stdcall glNewList (
        unsigned long list,
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glNormal3b (
        char nx,
        char ny,
        char nz ) = 0;
      virtual HRESULT __stdcall glNormal3bv (
        char * v ) = 0;
      virtual HRESULT __stdcall glNormal3d (
        double nx,
        double ny,
        double nz ) = 0;
      virtual HRESULT __stdcall glNormal3dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glNormal3f (
        float nx,
        float ny,
        float nz ) = 0;
      virtual HRESULT __stdcall glNormal3fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glNormal3i (
        long nx,
        long ny,
        long nz ) = 0;
      virtual HRESULT __stdcall glNormal3iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glNormal3s (
        short nx,
        short ny,
        short nz ) = 0;
      virtual HRESULT __stdcall glNormal3sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glNormalPointer (
        unsigned long type,
        long stride,
        VARIANT pointer ) = 0;
      virtual HRESULT __stdcall glOrtho (
        double Left,
        double Right,
        double Bottom,
        double Top,
        double zNear,
        double zFar ) = 0;
      virtual HRESULT __stdcall glPassThrough (
        float token ) = 0;
      virtual HRESULT __stdcall glPixelMapfv (
        unsigned long map,
        long mapsize,
        float * Values ) = 0;
      virtual HRESULT __stdcall glPixelMapuiv (
        unsigned long map,
        long mapsize,
        unsigned long * Values ) = 0;
      virtual HRESULT __stdcall glPixelMapusv (
        unsigned long map,
        long mapsize,
        unsigned short * Values ) = 0;
      virtual HRESULT __stdcall glPixelStoref (
        unsigned long PName,
        float param ) = 0;
      virtual HRESULT __stdcall glPixelStorei (
        unsigned long PName,
        long param ) = 0;
      virtual HRESULT __stdcall glPixelTransferf (
        unsigned long PName,
        float param ) = 0;
      virtual HRESULT __stdcall glPixelTransferi (
        unsigned long PName,
        long param ) = 0;
      virtual HRESULT __stdcall glPixelZoom (
        float xfactor,
        float yfactor ) = 0;
      virtual HRESULT __stdcall glPointSize (
        float size ) = 0;
      virtual HRESULT __stdcall glPolygonMode (
        unsigned long face,
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glPolygonOffset (
        float factor,
        float units ) = 0;
      virtual HRESULT __stdcall glPolygonStipple (
        unsigned char * Mask ) = 0;
      virtual HRESULT __stdcall glPopAttrib ( ) = 0;
      virtual HRESULT __stdcall glPopClientAttrib ( ) = 0;
      virtual HRESULT __stdcall glPopMatrix ( ) = 0;
      virtual HRESULT __stdcall glPopName ( ) = 0;
      virtual HRESULT __stdcall glPrioritizeTextures (
        long n,
        unsigned long * textures,
        float * priorities ) = 0;
      virtual HRESULT __stdcall glPushAttrib (
        unsigned long Mask ) = 0;
      virtual HRESULT __stdcall glPushClientAttrib (
        unsigned long Mask ) = 0;
      virtual HRESULT __stdcall glPushMatrix ( ) = 0;
      virtual HRESULT __stdcall glPushName (
        unsigned long name ) = 0;
      virtual HRESULT __stdcall glRasterPos2d (
        double x,
        double y ) = 0;
      virtual HRESULT __stdcall glRasterPos2dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glRasterPos2f (
        float x,
        float y ) = 0;
      virtual HRESULT __stdcall glRasterPos2fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glRasterPos2i (
        long x,
        long y ) = 0;
      virtual HRESULT __stdcall glRasterPos2iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glRasterPos2s (
        short x,
        short y ) = 0;
      virtual HRESULT __stdcall glRasterPos2sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glRasterPos3d (
        double x,
        double y,
        double z ) = 0;
      virtual HRESULT __stdcall glRasterPos3dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glRasterPos3f (
        float x,
        float y,
        float z ) = 0;
      virtual HRESULT __stdcall glRasterPos3fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glRasterPos3i (
        long x,
        long y,
        long z ) = 0;
      virtual HRESULT __stdcall glRasterPos3iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glRasterPos3s (
        short x,
        short y,
        short z ) = 0;
      virtual HRESULT __stdcall glRasterPos3sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glRasterPos4d (
        double x,
        double y,
        double z,
        double w ) = 0;
      virtual HRESULT __stdcall glRasterPos4dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glRasterPos4f (
        float x,
        float y,
        float z,
        float w ) = 0;
      virtual HRESULT __stdcall glRasterPos4fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glRasterPos4i (
        long x,
        long y,
        long z,
        long w ) = 0;
      virtual HRESULT __stdcall glRasterPos4iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glRasterPos4s (
        short x,
        short y,
        short z,
        short w ) = 0;
      virtual HRESULT __stdcall glRasterPos4sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glReadBuffer (
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glReadPixels (
        long x,
        long y,
        long Width,
        long height,
        unsigned long format,
        unsigned long type,
        VARIANT * pixels ) = 0;
      virtual HRESULT __stdcall glRectd (
        double x1,
        double y1,
        double x2,
        double y2 ) = 0;
      virtual HRESULT __stdcall glRectdv (
        double * v1,
        double * v2 ) = 0;
      virtual HRESULT __stdcall glRectf (
        float x1,
        float y1,
        float x2,
        float y2 ) = 0;
      virtual HRESULT __stdcall glRectfv (
        float * v1,
        float * v2 ) = 0;
      virtual HRESULT __stdcall glRecti (
        long x1,
        long y1,
        long x2,
        long y2 ) = 0;
      virtual HRESULT __stdcall glRectiv (
        long * v1,
        long * v2 ) = 0;
      virtual HRESULT __stdcall glRects (
        short x1,
        short y1,
        short x2,
        short y2 ) = 0;
      virtual HRESULT __stdcall glRectsv (
        short * v1,
        short * v2 ) = 0;
      virtual HRESULT __stdcall glRenderMode (
        unsigned long Mode,
        long * pResult ) = 0;
      virtual HRESULT __stdcall glRotated (
        double Angle,
        double x,
        double y,
        double z ) = 0;
      virtual HRESULT __stdcall glRotatef (
        float Angle,
        float x,
        float y,
        float z ) = 0;
      virtual HRESULT __stdcall glScaled (
        double x,
        double y,
        double z ) = 0;
      virtual HRESULT __stdcall glScalef (
        float x,
        float y,
        float z ) = 0;
      virtual HRESULT __stdcall glScissor (
        long x,
        long y,
        long Width,
        long height ) = 0;
      virtual HRESULT __stdcall glSelectBuffer (
        long size,
        unsigned long * buffer ) = 0;
      virtual HRESULT __stdcall glShadeModel (
        unsigned long Mode ) = 0;
      virtual HRESULT __stdcall glStencilFunc (
        unsigned long func,
        long ref,
        unsigned long Mask ) = 0;
      virtual HRESULT __stdcall glStencilMask (
        unsigned long Mask ) = 0;
      virtual HRESULT __stdcall glStencilOp (
        unsigned long fail,
        unsigned long zfail,
        unsigned long zpass ) = 0;
      virtual HRESULT __stdcall glTexCoord1d (
        double s ) = 0;
      virtual HRESULT __stdcall glTexCoord1dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glTexCoord1f (
        float s ) = 0;
      virtual HRESULT __stdcall glTexCoord1fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glTexCoord1i (
        long s ) = 0;
      virtual HRESULT __stdcall glTexCoord1iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glTexCoord1s (
        short s ) = 0;
      virtual HRESULT __stdcall glTexCoord1sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glTexCoord2d (
        double s,
        double t ) = 0;
      virtual HRESULT __stdcall glTexCoord2dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glTexCoord2f (
        float s,
        float t ) = 0;
      virtual HRESULT __stdcall glTexCoord2fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glTexCoord2i (
        long s,
        long t ) = 0;
      virtual HRESULT __stdcall glTexCoord2iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glTexCoord2s (
        short s,
        short t ) = 0;
      virtual HRESULT __stdcall glTexCoord2sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glTexCoord3d (
        double s,
        double t,
        double r ) = 0;
      virtual HRESULT __stdcall glTexCoord3dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glTexCoord3f (
        float s,
        float t,
        float r ) = 0;
      virtual HRESULT __stdcall glTexCoord3fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glTexCoord3i (
        long s,
        long t,
        long r ) = 0;
      virtual HRESULT __stdcall glTexCoord3iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glTexCoord3s (
        short s,
        short t,
        short r ) = 0;
      virtual HRESULT __stdcall glTexCoord3sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glTexCoord4d (
        double s,
        double t,
        double r,
        double q ) = 0;
      virtual HRESULT __stdcall glTexCoord4dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glTexCoord4f (
        float s,
        float t,
        float r,
        float q ) = 0;
      virtual HRESULT __stdcall glTexCoord4fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glTexCoord4i (
        long s,
        long t,
        long r,
        long q ) = 0;
      virtual HRESULT __stdcall glTexCoord4iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glTexCoord4s (
        short s,
        short t,
        short r,
        short q ) = 0;
      virtual HRESULT __stdcall glTexCoord4sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glTexCoordPointer (
        long size,
        unsigned long type,
        long stride,
        VARIANT pointer ) = 0;
      virtual HRESULT __stdcall glTexEnvf (
        unsigned long target,
        unsigned long PName,
        float param ) = 0;
      virtual HRESULT __stdcall glTexEnvfv (
        unsigned long target,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glTexEnvi (
        unsigned long target,
        unsigned long PName,
        long param ) = 0;
      virtual HRESULT __stdcall glTexEnviv (
        unsigned long target,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glTexGend (
        unsigned long coord,
        unsigned long PName,
        double param ) = 0;
      virtual HRESULT __stdcall glTexGendv (
        unsigned long coord,
        unsigned long PName,
        double * Params ) = 0;
      virtual HRESULT __stdcall glTexGenf (
        unsigned long coord,
        unsigned long PName,
        float param ) = 0;
      virtual HRESULT __stdcall glTexGenfv (
        unsigned long coord,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glTexGeni (
        unsigned long coord,
        unsigned long PName,
        long param ) = 0;
      virtual HRESULT __stdcall glTexGeniv (
        unsigned long coord,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glTexImage1D (
        unsigned long target,
        long level,
        long internalFormat,
        long Width,
        long border,
        unsigned long format,
        unsigned long type,
        VARIANT pixels ) = 0;
      virtual HRESULT __stdcall glTexImage2D (
        unsigned long target,
        long level,
        long internalFormat,
        long Width,
        long height,
        long border,
        unsigned long format,
        unsigned long type,
        VARIANT pixels ) = 0;
      virtual HRESULT __stdcall glTexParameterf (
        unsigned long target,
        unsigned long PName,
        float param ) = 0;
      virtual HRESULT __stdcall glTexParameterfv (
        unsigned long target,
        unsigned long PName,
        float * Params ) = 0;
      virtual HRESULT __stdcall glTexParameteri (
        unsigned long target,
        unsigned long PName,
        long param ) = 0;
      virtual HRESULT __stdcall glTexParameteriv (
        unsigned long target,
        unsigned long PName,
        long * Params ) = 0;
      virtual HRESULT __stdcall glTexSubImage1D (
        unsigned long target,
        long level,
        long xoffset,
        long Width,
        unsigned long format,
        unsigned long type,
        VARIANT pixels ) = 0;
      virtual HRESULT __stdcall glTexSubImage2D (
        unsigned long target,
        long level,
        long xoffset,
        long yoffset,
        long Width,
        long height,
        unsigned long format,
        unsigned long type,
        VARIANT pixels ) = 0;
      virtual HRESULT __stdcall glTranslated (
        double x,
        double y,
        double z ) = 0;
      virtual HRESULT __stdcall glTranslatef (
        float x,
        float y,
        float z ) = 0;
      virtual HRESULT __stdcall glVertex2d (
        double x,
        double y ) = 0;
      virtual HRESULT __stdcall glVertex2dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glVertex2f (
        float x,
        float y ) = 0;
      virtual HRESULT __stdcall glVertex2fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glVertex2i (
        long x,
        long y ) = 0;
      virtual HRESULT __stdcall glVertex2iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glVertex2s (
        short x,
        short y ) = 0;
      virtual HRESULT __stdcall glVertex2sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glVertex3d (
        double x,
        double y,
        double z ) = 0;
      virtual HRESULT __stdcall glVertex3dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glVertex3f (
        float x,
        float y,
        float z ) = 0;
      virtual HRESULT __stdcall glVertex3fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glVertex3i (
        long x,
        long y,
        long z ) = 0;
      virtual HRESULT __stdcall glVertex3iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glVertex3s (
        short x,
        short y,
        short z ) = 0;
      virtual HRESULT __stdcall glVertex3sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glVertex4d (
        double x,
        double y,
        double z,
        double w ) = 0;
      virtual HRESULT __stdcall glVertex4dv (
        double * v ) = 0;
      virtual HRESULT __stdcall glVertex4f (
        float x,
        float y,
        float z,
        float w ) = 0;
      virtual HRESULT __stdcall glVertex4fv (
        float * v ) = 0;
      virtual HRESULT __stdcall glVertex4i (
        long x,
        long y,
        long z,
        long w ) = 0;
      virtual HRESULT __stdcall glVertex4iv (
        long * v ) = 0;
      virtual HRESULT __stdcall glVertex4s (
        short x,
        short y,
        short z,
        short w ) = 0;
      virtual HRESULT __stdcall glVertex4sv (
        short * v ) = 0;
      virtual HRESULT __stdcall glVertexPointer (
        long size,
        unsigned long type,
        long stride,
        VARIANT pointer ) = 0;
      virtual HRESULT __stdcall glViewport (
        long x,
        long y,
        long Width,
        long height ) = 0;
      virtual HRESULT __stdcall glMap2d (
        unsigned long target,
        double u1,
        double u2,
        long ustride,
        long uorder,
        double v1,
        double v2,
        long vstride,
        long vorder,
        double * points ) = 0;
};

struct __declspec(uuid("c6c4739c-4e00-488f-8024-76f793261b17"))
OpenGLViewEvents;
    // [ default ] interface IOpenGLViewEvents

struct __declspec(uuid("800a76a8-a08c-47cf-a985-ea4dec364e2f"))
IOpenGLViewEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall OnEvent (
        long EventType,
        VARIANT Param1,
        VARIANT Param2,
        VARIANT Param3,
        VARIANT Param4,
        VARIANT Param5,
        VARIANT Param6,
        VARIANT Param7 ) = 0;
};

struct __declspec(uuid("d37ffe74-89cb-4272-a00b-78aae721793c"))
OpenGLUtilView;
    // [ default ] interface IOpenGLUtilView

struct __declspec(uuid("c648d646-603d-4f95-bb6d-a8b6fbd0471a"))
IOpenGLUtilView : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall gluErrorString (
        unsigned long errCode,
        unsigned char * errString ) = 0;
      virtual HRESULT __stdcall gluErrorUnicodeStringEXT (
        unsigned long errCode,
        BSTR * errString ) = 0;
      virtual HRESULT __stdcall gluGetString (
        unsigned long name,
        unsigned char * strString ) = 0;
      virtual HRESULT __stdcall gluOrtho2D (
        double Left,
        double Right,
        double Bottom,
        double Top ) = 0;
      virtual HRESULT __stdcall gluPerspective (
        double fovy,
        double aspect,
        double zNear,
        double zFar ) = 0;
      virtual HRESULT __stdcall gluPickMatrix (
        double x,
        double y,
        double Width,
        double height,
        long * viewport ) = 0;
      virtual HRESULT __stdcall gluLookAt (
        double eyex,
        double eyey,
        double eyez,
        double centerx,
        double centery,
        double centerz,
        double upx,
        double upy,
        double upz ) = 0;
      virtual HRESULT __stdcall gluProject (
        double objx,
        double objy,
        double objz,
        double * modelMatrix,
        double * projMatrix,
        long * viewport,
        double * winx,
        double * winy,
        double * winz ) = 0;
      virtual HRESULT __stdcall gluUnProject (
        double winx,
        double winy,
        double winz,
        double * modelMatrix,
        double * projMatrix,
        long * viewport,
        double * objx,
        double * objy,
        double * objz ) = 0;
      virtual HRESULT __stdcall gluScaleImage (
        long format,
        long widthin,
        long heightin,
        long typein,
        VARIANT datain,
        long widthout,
        long heightout,
        long typeout,
        VARIANT * dataout ) = 0;
      virtual HRESULT __stdcall gluBuild1DMipmaps (
        long target,
        long components,
        long Width,
        long format,
        long type,
        VARIANT data ) = 0;
      virtual HRESULT __stdcall gluBuild2DMipmaps (
        long target,
        long components,
        long Width,
        long height,
        long format,
        long type,
        VARIANT data ) = 0;
      virtual HRESULT __stdcall gluNewQuadric (
        VARIANT * pNewQuadricObj ) = 0;
      virtual HRESULT __stdcall gluDeleteQuadric (
        VARIANT state ) = 0;
      virtual HRESULT __stdcall gluQuadricNormals (
        VARIANT quadObject,
        unsigned long normals ) = 0;
      virtual HRESULT __stdcall gluQuadricTexture (
        VARIANT quadObject,
        unsigned char textureCoords ) = 0;
      virtual HRESULT __stdcall gluQuadricOrientation (
        VARIANT quadObject,
        unsigned long orientation ) = 0;
      virtual HRESULT __stdcall gluQuadricDrawStyle (
        VARIANT quadObject,
        unsigned long drawStyle ) = 0;
      virtual HRESULT __stdcall gluCylinder (
        VARIANT qobj,
        double baseRadius,
        double topRadius,
        double height,
        long slices,
        long stacks ) = 0;
      virtual HRESULT __stdcall gluDisk (
        VARIANT qobj,
        double innerRadius,
        double outerRadius,
        long slices,
        long loops ) = 0;
      virtual HRESULT __stdcall gluPartialDisk (
        VARIANT qobj,
        double innerRadius,
        double outerRadius,
        long slices,
        long loops,
        double startAngle,
        double sweepAngle ) = 0;
      virtual HRESULT __stdcall gluSphere (
        VARIANT qobj,
        double Radius,
        long slices,
        long stacks ) = 0;
      virtual HRESULT __stdcall gluQuadricCallback (
        VARIANT qobj,
        long which,
        VARIANT fnCallback ) = 0;
      virtual HRESULT __stdcall gluNewTess (
        VARIANT * pNewTess ) = 0;
      virtual HRESULT __stdcall gluDeleteTess (
        VARIANT tess ) = 0;
      virtual HRESULT __stdcall gluTessBeginPolygon (
        VARIANT tess,
        VARIANT polygon_data ) = 0;
      virtual HRESULT __stdcall gluTessBeginContour (
        VARIANT tess ) = 0;
      virtual HRESULT __stdcall gluTessVertex (
        VARIANT tess,
        double * coords,
        VARIANT data ) = 0;
      virtual HRESULT __stdcall gluTessEndContour (
        VARIANT tess ) = 0;
      virtual HRESULT __stdcall gluTessEndPolygon (
        VARIANT tess ) = 0;
      virtual HRESULT __stdcall gluTessProperty (
        VARIANT tess,
        unsigned long which,
        double Value ) = 0;
      virtual HRESULT __stdcall gluTessNormal (
        VARIANT tess,
        double x,
        double y,
        double z ) = 0;
      virtual HRESULT __stdcall gluTessCallback (
        VARIANT tess,
        unsigned long which,
        VARIANT Callback ) = 0;
      virtual HRESULT __stdcall gluGetTessProperty (
        VARIANT tess,
        unsigned long which,
        double * Value ) = 0;
      virtual HRESULT __stdcall gluNewNurbsRenderer (
        VARIANT * ewNurbsRenderer ) = 0;
      virtual HRESULT __stdcall gluDeleteNurbsRenderer (
        VARIANT nobj ) = 0;
      virtual HRESULT __stdcall gluBeginSurface (
        VARIANT nobj ) = 0;
      virtual HRESULT __stdcall gluBeginCurve (
        VARIANT nobj ) = 0;
      virtual HRESULT __stdcall gluEndCurve (
        VARIANT nobj ) = 0;
      virtual HRESULT __stdcall gluEndSurface (
        VARIANT nobj ) = 0;
      virtual HRESULT __stdcall gluBeginTrim (
        VARIANT nobj ) = 0;
      virtual HRESULT __stdcall gluEndTrim (
        VARIANT nobj ) = 0;
      virtual HRESULT __stdcall gluPwlCurve (
        VARIANT nobj,
        long count,
        float * pArray,
        long stride,
        unsigned long lType ) = 0;
      virtual HRESULT __stdcall gluNurbsCurve (
        VARIANT nobj,
        long nknots,
        float * knot,
        long lstride,
        float * ctlarray,
        long lOrder,
        unsigned long lType ) = 0;
      virtual HRESULT __stdcall gluNurbsSurface (
        VARIANT nobj,
        long sknot_count,
        float * sknot,
        long tknot_count,
        float * tknot,
        long s_stride,
        long t_stride,
        float * ctlarray,
        long sorder,
        long torder,
        long lType ) = 0;
      virtual HRESULT __stdcall gluLoadSamplingMatrices (
        VARIANT nobj,
        float * modelMatrix,
        float * projMatrix,
        long * viewport ) = 0;
      virtual HRESULT __stdcall gluNurbsProperty (
        VARIANT nobj,
        unsigned long lproperty,
        float lValue ) = 0;
      virtual HRESULT __stdcall gluGetNurbsProperty (
        VARIANT nobj,
        unsigned long lproperty,
        float * pValue ) = 0;
      virtual HRESULT __stdcall gluNurbsCallback (
        VARIANT nobj,
        unsigned long which,
        VARIANT pCallback ) = 0;
      virtual HRESULT __stdcall gluBeginPolygon (
        VARIANT tess ) = 0;
      virtual HRESULT __stdcall gluNextContour (
        VARIANT tess,
        unsigned long lType ) = 0;
      virtual HRESULT __stdcall gluEndPolygon (
        VARIANT tess ) = 0;
};

struct __declspec(uuid("e6dc451d-1949-4e5e-a9dd-b1b1bbd4e298"))
OpenGLUtilViewEvents;
    // [ default ] interface IOpenGLUtilViewEvents

struct __declspec(uuid("0a6b74cb-f443-4416-a121-a16031745ebf"))
IOpenGLUtilViewEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GLUquadricErrorProc (
        unsigned long errorNo ) = 0;
      virtual HRESULT __stdcall GLUtessBeginProc (
        unsigned long param ) = 0;
      virtual HRESULT __stdcall GLUtessEdgeFlagProc (
        unsigned char param ) = 0;
      virtual HRESULT __stdcall GLUtessVertexProc (
        VARIANT * pParam ) = 0;
      virtual HRESULT __stdcall GLUtessEndProc (
        VARIANT param ) = 0;
      virtual HRESULT __stdcall GLUtessErrorProc (
        unsigned long param ) = 0;
      virtual HRESULT __stdcall GLUtessCombineProc (
        double * Param1,
        VARIANT * Param2,
        float * Param3,
        VARIANT * Param4 ) = 0;
      virtual HRESULT __stdcall GLUtessBeginDataProc (
        unsigned long Param1,
        VARIANT * Param2 ) = 0;
      virtual HRESULT __stdcall GLUtessEdgeFlagDataProc (
        unsigned char Param1,
        VARIANT * Param2 ) = 0;
      virtual HRESULT __stdcall GLUtessVertexDataProc (
        VARIANT * Param1,
        VARIANT * Param2 ) = 0;
      virtual HRESULT __stdcall GLUtessEndDataProc (
        VARIANT * Param1 ) = 0;
      virtual HRESULT __stdcall GLUtessErrorDataProc (
        unsigned long Param1,
        VARIANT * Param2 ) = 0;
      virtual HRESULT __stdcall GLUtessCombineDataProc (
        double * Param1,
        VARIANT * Param2,
        float * Param3,
        VARIANT * Param4,
        VARIANT Param5 ) = 0;
      virtual HRESULT __stdcall GLUnurbsErrorProc (
        unsigned long Param1 ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_EurekaSim =
    {0x38379857,0x2986,0x4cd5,{0xb2,0x6f,0xc2,0xfe,0xd4,0x68,0xd3,0x42}};
extern "C" const GUID __declspec(selectany) CLSID_Addin =
    {0x70afc313,0xa879,0x4012,{0x81,0x2d,0xaa,0x71,0x4a,0xef,0x8c,0x6f}};
extern "C" const GUID __declspec(selectany) IID_IMainApplication =
    {0x9e6c4518,0xaf98,0x4654,{0xb2,0x94,0x70,0x9d,0x04,0x40,0x69,0x8b}};
extern "C" const GUID __declspec(selectany) IID_IAddin =
    {0x1186bc6b,0x64a7,0x4415,{0xbd,0xf6,0x4b,0x19,0x2b,0xb2,0x77,0x33}};
extern "C" const GUID __declspec(selectany) CLSID_MainApplication =
    {0x36f4f7bf,0x6a25,0x47a4,{0xa5,0xdb,0x5c,0x84,0xb8,0x28,0x11,0xa1}};
extern "C" const GUID __declspec(selectany) CLSID_MainApplicationEvents =
    {0xd729e31d,0xcc69,0x48bf,{0xac,0x5a,0xa5,0x86,0x0d,0xfd,0x66,0x7b}};
extern "C" const GUID __declspec(selectany) IID_IMainApplicationEvents =
    {0x42c2b21e,0x0555,0x439c,{0x89,0x05,0x22,0x2d,0xd0,0x22,0x34,0xfb}};
extern "C" const GUID __declspec(selectany) CLSID_MainWindow =
    {0x005fd9da,0xa89c,0x4d58,{0x9f,0x17,0xf1,0xca,0xa0,0x24,0x84,0xf9}};
extern "C" const GUID __declspec(selectany) IID_IMainWindow =
    {0x76af030a,0x35a8,0x405b,{0xb6,0x49,0xac,0xe8,0x18,0xa0,0x07,0xbc}};
extern "C" const GUID __declspec(selectany) CLSID_ApplicationDocument =
    {0x9025bdcc,0x4135,0x4453,{0x99,0xf8,0x6f,0xf1,0x6c,0x18,0x22,0xdc}};
extern "C" const GUID __declspec(selectany) IID_IApplicationDocument =
    {0xe03bd2af,0xd443,0x4e17,{0xad,0x85,0xc0,0xd2,0x00,0x43,0x21,0xc7}};
extern "C" const GUID __declspec(selectany) CLSID_ApplicationView =
    {0x7f4547b3,0xfc11,0x4e6e,{0xaf,0xda,0xad,0x77,0xbe,0x3a,0x65,0xa8}};
extern "C" const GUID __declspec(selectany) IID_IApplicationView =
    {0x497cada6,0x3a37,0x4f5e,{0xa4,0x1d,0x01,0x02,0x21,0xd7,0xde,0xb2}};
extern "C" const GUID __declspec(selectany) CLSID_ApplicationSettings =
    {0x8bcce11f,0xd19f,0x4483,{0x87,0x37,0xee,0x54,0xe5,0x69,0x6d,0x7f}};
extern "C" const GUID __declspec(selectany) IID_IApplicationSettings =
    {0xab315f3b,0x305b,0x44d1,{0x87,0x1b,0x65,0xfa,0xd0,0x0b,0x20,0x38}};
extern "C" const GUID __declspec(selectany) CLSID_RibbonToolbar =
    {0x9a19345b,0x2f40,0x4a04,{0xb1,0x71,0x6e,0xb1,0x38,0x56,0x37,0xbb}};
extern "C" const GUID __declspec(selectany) IID_IRibbonToolbar =
    {0x0add5a11,0x7b77,0x4094,{0xaf,0x8a,0x54,0x0b,0x28,0xc7,0x3d,0x71}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyWindow =
    {0xc73bf8a4,0xe4dc,0x48e9,{0x8a,0x8a,0x68,0x69,0x5d,0x71,0xc7,0x77}};
extern "C" const GUID __declspec(selectany) IID_IPropertyWindow =
    {0xcc1583fe,0x2ab3,0x4d68,{0xb0,0x50,0x50,0x2c,0x58,0x8f,0x3f,0xe8}};
extern "C" const GUID __declspec(selectany) CLSID_ApplicationViewEvents =
    {0x75cce2a4,0x4996,0x4c5e,{0xac,0xf0,0x57,0x79,0x51,0x9c,0x7a,0x18}};
extern "C" const GUID __declspec(selectany) IID_IApplicationViewEvents =
    {0x5e1d1e5e,0xfa59,0x41ef,{0xb2,0xf0,0x45,0x00,0x7f,0x70,0x31,0x10}};
extern "C" const GUID __declspec(selectany) CLSID_RibbonToolbarEvents =
    {0x27609e1d,0xab3e,0x4058,{0x85,0x74,0xe9,0xce,0xe5,0x57,0x77,0x08}};
extern "C" const GUID __declspec(selectany) IID_IRibbonToolbarEvents =
    {0x86a64f82,0x5e60,0x4d4d,{0xa3,0xd8,0x3b,0x51,0x28,0x05,0xf8,0x47}};
extern "C" const GUID __declspec(selectany) CLSID_PropertyWindowEvents =
    {0x5adfa2f2,0xa0f4,0x4eed,{0x92,0xc3,0x6e,0x91,0x01,0x3a,0x1f,0x64}};
extern "C" const GUID __declspec(selectany) IID_IPropertyWindowEvents =
    {0x59950c9d,0x08fd,0x4c0d,{0xb4,0x4c,0xe4,0xc0,0xf5,0xc2,0xe3,0xab}};
extern "C" const GUID __declspec(selectany) CLSID_ApplicationDocumentEvents =
    {0x41e563df,0x22ca,0x4d51,{0xb4,0x0a,0xee,0x3d,0xcd,0x62,0xdb,0x6b}};
extern "C" const GUID __declspec(selectany) IID_IApplicationDocumentEvents =
    {0x902aeb11,0x0b73,0x4be9,{0x90,0x00,0x3f,0xe4,0x82,0xb3,0x40,0xa6}};
extern "C" const GUID __declspec(selectany) CLSID_Experiment =
    {0x0f56f152,0x82cd,0x4b00,{0x9a,0x56,0xea,0xe6,0x22,0xe2,0x25,0x54}};
extern "C" const GUID __declspec(selectany) IID_IExperiment =
    {0xc8eee054,0x055f,0x42d5,{0x9c,0x32,0xaa,0xe2,0xf5,0xdb,0x8c,0xa3}};
extern "C" const GUID __declspec(selectany) CLSID_ExperimentEvents =
    {0xe9240855,0x9646,0x4564,{0x97,0x1d,0x99,0x58,0xcb,0x48,0xcb,0x5c}};
extern "C" const GUID __declspec(selectany) IID_IExperimentEvents =
    {0x92f075d5,0x45de,0x40bf,{0x95,0x4f,0x9b,0xc0,0x97,0xfc,0x04,0x3b}};
extern "C" const GUID __declspec(selectany) CLSID_ApplicationChart =
    {0x9d8447a5,0x48ea,0x45d9,{0x99,0x46,0xf1,0x15,0x3c,0x1c,0x48,0x88}};
extern "C" const GUID __declspec(selectany) IID_IApplicationChart =
    {0xcdfe7248,0x527e,0x4890,{0xb1,0xb3,0x24,0xe3,0x72,0x67,0x9c,0xbe}};
extern "C" const GUID __declspec(selectany) CLSID_GraphCtl =
    {0x7d7e6bcd,0x0089,0x4db9,{0xb4,0xe4,0x8f,0xe9,0x03,0x73,0x24,0x13}};
extern "C" const GUID __declspec(selectany) IID_IGraphCtl =
    {0x1ba3e124,0x9276,0x487a,{0x9c,0xae,0xd9,0xa2,0x27,0x6e,0x80,0xf8}};
extern "C" const GUID __declspec(selectany) CLSID_MainWindowEvents =
    {0xff8f1bc0,0x4715,0x4eb8,{0xad,0xc7,0xf4,0x01,0x54,0x56,0x5e,0x33}};
extern "C" const GUID __declspec(selectany) IID_IMainWindowEvents =
    {0x99f323b8,0xbd88,0x4dce,{0xaa,0x10,0x4b,0xa0,0x06,0x1b,0xaf,0x24}};
extern "C" const GUID __declspec(selectany) CLSID_ExperimentTreeView =
    {0x894be66a,0x5355,0x47a5,{0x85,0x2c,0x82,0x2c,0x18,0x29,0xff,0x34}};
extern "C" const GUID __declspec(selectany) IID_IExperimentTreeView =
    {0x30038c10,0x4ba8,0x4ae5,{0x82,0x0f,0xd2,0x2d,0x9c,0x94,0x7e,0xcf}};
extern "C" const GUID __declspec(selectany) CLSID_ExperimentTreeViewEvents =
    {0xa219a39d,0x2a0f,0x4658,{0xa8,0x10,0x8a,0xa4,0x40,0xb1,0x98,0x52}};
extern "C" const GUID __declspec(selectany) IID_IExperimentTreeViewEvents =
    {0x845dfb21,0x303b,0x4751,{0x95,0x1e,0x6f,0x0d,0xf8,0xa0,0x13,0xc1}};
extern "C" const GUID __declspec(selectany) CLSID_FileSettingsTreeViewEvents =
    {0x25a65e7e,0xe249,0x425f,{0x90,0xbd,0x4b,0xd6,0x1c,0x72,0x78,0x83}};
extern "C" const GUID __declspec(selectany) IID_IFileSettingsTreeViewEvents =
    {0xee1f0283,0xed2f,0x4d38,{0xb2,0xe4,0xfc,0xce,0xb1,0xd4,0x60,0xf0}};
extern "C" const GUID __declspec(selectany) CLSID_FileSettingsTreeView =
    {0x1d8edc8a,0xf049,0x4ba0,{0x8b,0xc5,0x95,0x5a,0x82,0xbf,0xc6,0x01}};
extern "C" const GUID __declspec(selectany) IID_IFileSettingsTreeView =
    {0x54abd01e,0x3a09,0x4ab9,{0xa5,0x94,0xa6,0x52,0xa6,0x97,0xf2,0xb1}};
extern "C" const GUID __declspec(selectany) CLSID_GraphCtrl2d =
    {0x40c1d140,0x3b42,0x46ef,{0x84,0x8d,0xb1,0xba,0x00,0x96,0x92,0xef}};
extern "C" const GUID __declspec(selectany) IID_IGraphCtrl2d =
    {0x0fffbabb,0x9f1a,0x43e8,{0xa2,0xff,0x6c,0xf9,0x7d,0x6d,0x27,0x2a}};
extern "C" const GUID __declspec(selectany) CLSID_OpenGLView =
    {0x0234ea06,0xbacd,0x4930,{0x8f,0x94,0x11,0x03,0x4f,0xe5,0xfc,0xc1}};
extern "C" const GUID __declspec(selectany) IID_IOpenGLView =
    {0xadb4e5e0,0xca47,0x44bf,{0x97,0x44,0x31,0x78,0xad,0xe8,0x6f,0x6d}};
extern "C" const GUID __declspec(selectany) CLSID_OpenGLViewEvents =
    {0xc6c4739c,0x4e00,0x488f,{0x80,0x24,0x76,0xf7,0x93,0x26,0x1b,0x17}};
extern "C" const GUID __declspec(selectany) IID_IOpenGLViewEvents =
    {0x800a76a8,0xa08c,0x47cf,{0xa9,0x85,0xea,0x4d,0xec,0x36,0x4e,0x2f}};
extern "C" const GUID __declspec(selectany) CLSID_OpenGLUtilView =
    {0xd37ffe74,0x89cb,0x4272,{0xa0,0x0b,0x78,0xaa,0xe7,0x21,0x79,0x3c}};
extern "C" const GUID __declspec(selectany) IID_IOpenGLUtilView =
    {0xc648d646,0x603d,0x4f95,{0xbb,0x6d,0xa8,0xb6,0xfb,0xd0,0x47,0x1a}};
extern "C" const GUID __declspec(selectany) CLSID_OpenGLUtilViewEvents =
    {0xe6dc451d,0x1949,0x4e5e,{0xa9,0xdd,0xb1,0xb1,0xbb,0xd4,0xe2,0x98}};
extern "C" const GUID __declspec(selectany) IID_IOpenGLUtilViewEvents =
    {0x0a6b74cb,0xf443,0x4416,{0xa1,0x21,0xa1,0x60,0x31,0x74,0x5e,0xbf}};

#pragma pack(pop)
